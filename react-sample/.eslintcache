[{"/usr/src/app/react-sample/src/index.tsx":"1","/usr/src/app/react-sample/src/serviceWorker.ts":"2","/usr/src/app/react-sample/src/App.tsx":"3","/usr/src/app/react-sample/src/context/Auth/AuthContext.tsx":"4","/usr/src/app/react-sample/src/context/Auth/AuthHooks.ts":"5","/usr/src/app/react-sample/src/plugins/axios/index.ts":"6","/usr/src/app/react-sample/src/components/pages/LoginPage.tsx":"7","/usr/src/app/react-sample/src/components/pages/HomePage.tsx":"8","/usr/src/app/react-sample/src/components/pages/TaskPage.tsx":"9","/usr/src/app/react-sample/src/components/pages/UploadPage.tsx":"10","/usr/src/app/react-sample/src/components/pages/CountPagePro.tsx":"11","/usr/src/app/react-sample/src/components/pages/UsersListPage.tsx":"12","/usr/src/app/react-sample/src/components/higher-order/ProtectedRoute.tsx":"13","/usr/src/app/react-sample/src/data/rest.ts":"14","/usr/src/app/react-sample/src/context/User/TaskActions.ts":"15","/usr/src/app/react-sample/src/context/User/TaskHooks.ts":"16","/usr/src/app/react-sample/src/components/pages/CountPage.tsx":"17","/usr/src/app/react-sample/src/components/organisms/FileList.tsx":"18","/usr/src/app/react-sample/src/components/tasks/TaskContainer.tsx":"19","/usr/src/app/react-sample/src/context/File/FileStore.tsx":"20","/usr/src/app/react-sample/src/components/templates/GenericTemplate.tsx":"21","/usr/src/app/react-sample/src/context/Task/TaskContext.tsx":"22","/usr/src/app/react-sample/src/context/Count/CntStores.tsx":"23","/usr/src/app/react-sample/src/context/User/Interfaces.ts":"24","/usr/src/app/react-sample/src/data/mock/index.ts":"25","/usr/src/app/react-sample/src/data/api/user/index.ts":"26","/usr/src/app/react-sample/src/context/File/Interfaces.ts":"27","/usr/src/app/react-sample/src/context/User/TaskContext.tsx":"28","/usr/src/app/react-sample/src/context/Task/TaskReducer.ts":"29","/usr/src/app/react-sample/src/context/Count/CntReducer.ts":"30","/usr/src/app/react-sample/src/services/file.service.ts":"31","/usr/src/app/react-sample/src/components/utils/promise-pool.ts":"32","/usr/src/app/react-sample/src/components/pages/TodoList.tsx":"33","/usr/src/app/react-sample/src/components/pages/Footer.tsx":"34","/usr/src/app/react-sample/src/components/pages/AddTodo.tsx":"35","/usr/src/app/react-sample/src/context/File/FileReducer.ts":"36","/usr/src/app/react-sample/src/context/Task/TaskHooks.ts":"37","/usr/src/app/react-sample/src/context/Task/TaskActions.ts":"38","/usr/src/app/react-sample/src/components/tasks/ListTask.tsx":"39","/usr/src/app/react-sample/src/components/tasks/LogoutButton.tsx":"40","/usr/src/app/react-sample/src/data/mock/$mock.ts":"41","/usr/src/app/react-sample/src/data/api/user/getUsers.ts":"42","/usr/src/app/react-sample/src/context/User/TaskReducer.ts":"43","/usr/src/app/react-sample/src/context/Task/Interfaces.ts":"44","/usr/src/app/react-sample/src/components/pages/Todo.tsx":"45","/usr/src/app/react-sample/src/components/pages/FilterLink.tsx":"46","/usr/src/app/react-sample/src/components/tasks/TaskElem.tsx":"47","/usr/src/app/react-sample/src/data/mock/company/listcompany.ts":"48","/usr/src/app/react-sample/src/data/mock/user/list.ts":"49","/usr/src/app/react-sample/src/components/tasks/CheckboxStatus.tsx":"50","/usr/src/app/react-sample/src/components/tasks/DeleteBtn.tsx":"51"},{"size":650,"mtime":1636620469633,"results":"52","hashOfConfig":"53"},{"size":5444,"mtime":1636619986207,"results":"54","hashOfConfig":"53"},{"size":1341,"mtime":1636620469553,"results":"55","hashOfConfig":"53"},{"size":2120,"mtime":1636620469598,"results":"56","hashOfConfig":"53"},{"size":278,"mtime":1636620469598,"results":"57","hashOfConfig":"53"},{"size":1120,"mtime":1636620469633,"results":"58","hashOfConfig":"53"},{"size":2564,"mtime":1636620469585,"results":"59","hashOfConfig":"53"},{"size":310,"mtime":1636619986193,"results":"60","hashOfConfig":"53"},{"size":391,"mtime":1636620469587,"results":"61","hashOfConfig":"53"},{"size":461,"mtime":1636620469589,"results":"62","hashOfConfig":"53"},{"size":371,"mtime":1636620469583,"results":"63","hashOfConfig":"53"},{"size":8835,"mtime":1636620469589,"results":"64","hashOfConfig":"53"},{"size":518,"mtime":1636620469574,"results":"65","hashOfConfig":"53"},{"size":1462,"mtime":1658163252749,"results":"66","hashOfConfig":"53"},{"size":2348,"mtime":1636620469625,"results":"67","hashOfConfig":"53"},{"size":857,"mtime":1636620469627,"results":"68","hashOfConfig":"53"},{"size":281,"mtime":1636620469582,"results":"69","hashOfConfig":"53"},{"size":5266,"mtime":1636620469574,"results":"70","hashOfConfig":"53"},{"size":2476,"mtime":1636620469594,"results":"71","hashOfConfig":"53"},{"size":1143,"mtime":1636620469603,"results":"72","hashOfConfig":"53"},{"size":8377,"mtime":1636620469596,"results":"73","hashOfConfig":"53"},{"size":906,"mtime":1636620469609,"results":"74","hashOfConfig":"53"},{"size":547,"mtime":1636620469601,"results":"75","hashOfConfig":"53"},{"size":1503,"mtime":1636620469622,"results":"76","hashOfConfig":"53"},{"size":47,"mtime":1636619986193,"results":"77","hashOfConfig":"53"},{"size":62,"mtime":1636619986193,"results":"78","hashOfConfig":"53"},{"size":1301,"mtime":1636620469604,"results":"79","hashOfConfig":"53"},{"size":906,"mtime":1636620469626,"results":"80","hashOfConfig":"53"},{"size":1429,"mtime":1636620469617,"results":"81","hashOfConfig":"53"},{"size":855,"mtime":1636620469600,"results":"82","hashOfConfig":"53"},{"size":2520,"mtime":1636620469633,"results":"83","hashOfConfig":"53"},{"size":1067,"mtime":1636620469597,"results":"84","hashOfConfig":"53"},{"size":1135,"mtime":1636620469588,"results":"85","hashOfConfig":"53"},{"size":1022,"mtime":1636620469584,"results":"86","hashOfConfig":"53"},{"size":840,"mtime":1636620469578,"results":"87","hashOfConfig":"53"},{"size":746,"mtime":1636620469603,"results":"88","hashOfConfig":"53"},{"size":857,"mtime":1636620469616,"results":"89","hashOfConfig":"53"},{"size":2348,"mtime":1636620469609,"results":"90","hashOfConfig":"53"},{"size":489,"mtime":1636620469591,"results":"91","hashOfConfig":"53"},{"size":404,"mtime":1636620469593,"results":"92","hashOfConfig":"53"},{"size":361,"mtime":1650131444925,"results":"93","hashOfConfig":"53"},{"size":309,"mtime":1636619986193,"results":"94","hashOfConfig":"53"},{"size":1429,"mtime":1636620469628,"results":"95","hashOfConfig":"53"},{"size":1552,"mtime":1636620469605,"results":"96","hashOfConfig":"53"},{"size":418,"mtime":1636620469587,"results":"97","hashOfConfig":"53"},{"size":508,"mtime":1636620469583,"results":"98","hashOfConfig":"53"},{"size":964,"mtime":1636620469595,"results":"99","hashOfConfig":"53"},{"size":474,"mtime":1636619986193,"results":"100","hashOfConfig":"53"},{"size":652,"mtime":1636620469629,"results":"101","hashOfConfig":"53"},{"size":757,"mtime":1636620469590,"results":"102","hashOfConfig":"53"},{"size":628,"mtime":1636620469591,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"jtc246",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"106"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"/usr/src/app/react-sample/src/index.tsx",[],["210","211"],"/usr/src/app/react-sample/src/serviceWorker.ts",[],"/usr/src/app/react-sample/src/App.tsx",[],"/usr/src/app/react-sample/src/context/Auth/AuthContext.tsx",[],"/usr/src/app/react-sample/src/context/Auth/AuthHooks.ts",[],"/usr/src/app/react-sample/src/plugins/axios/index.ts",[],"/usr/src/app/react-sample/src/components/pages/LoginPage.tsx",[],"/usr/src/app/react-sample/src/components/pages/HomePage.tsx",[],"/usr/src/app/react-sample/src/components/pages/TaskPage.tsx",[],"/usr/src/app/react-sample/src/components/pages/UploadPage.tsx",[],"/usr/src/app/react-sample/src/components/pages/CountPagePro.tsx",[],"/usr/src/app/react-sample/src/components/pages/UsersListPage.tsx",["212","213","214","215","216","217","218"],"import React, { useState, useEffect } from 'react';\r\nimport '../../App.css';\r\nimport { forwardRef } from 'react';\r\n// import Avatar from 'react-avatar';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport GenericTemplate from \"../templates/GenericTemplate\";\r\n\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport axios from 'axios'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { getUsers } from '../../data/api/user';\r\nimport { createTask, getTasks } from \"../../context/User/TaskActions\";\r\nimport { defaultQueryOptions } from \"../../context/User/TaskContext\";\r\nimport { useTaskAction, useTasks } from \"../../context/User/TaskHooks\";\r\n\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef<SVGSVGElement>((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef<SVGSVGElement>((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef<SVGSVGElement>((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef<SVGSVGElement>((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef<SVGSVGElement>((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef<SVGSVGElement>((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef<SVGSVGElement>((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef<SVGSVGElement>((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef<SVGSVGElement>((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef<SVGSVGElement>((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef<SVGSVGElement>((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef<SVGSVGElement>((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef<SVGSVGElement>((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef<SVGSVGElement>((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef<SVGSVGElement>((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef<SVGSVGElement>((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef<SVGSVGElement>((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst api = axios.create({\r\n  baseURL: `https://reqres.in/api` //仮\r\n})\r\n\r\n\r\n// function validateEmail(email){\r\n//   const re = /^((?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\]))$/;\r\n//   return re.test(String(email).toLowerCase());\r\n// }\r\n\r\nconst App = () => {\r\n\r\n  var columns = [\r\n    { title: '担当者ID', field: 'id' },\r\n    { title: '担当者名', field: 'name' },\r\n    { title: '担当先', field: 'company' },\r\n    { title: '担当先TEL', field: 'tel' },\r\n]\r\n  const [data, setData] = useState([]); //table data\r\n  const [{ items: tasks, meta }] = useTasks();\r\n  const [, createTaskCb] = useTaskAction(createTask);\r\n  const [{ loading: getTaskLoading, error }, getTaskCb] = useTaskAction(getTasks);\r\n\r\n//   const [data, setData] = useState('');\r\n\r\n  //for error handling\r\n  const [iserror, setIserror] = useState(false)\r\n  const [errorMessages, setErrorMessages] = useState([])\r\n\r\n//   useEffect(() => {\r\n//     api.get(\"/users\")\r\n//         .then(res => {\r\n//             setData(res.data.data)\r\n//          })\r\n//          .catch(error=>{\r\n//              console.log(\"Error\")\r\n//          })\r\n//   }, [])\r\n\r\n//   useEffect(() => {\r\n//     api.get(\"/users\")\r\n//         .then(res => {\r\n//             setData(res.data.data)\r\n//          })\r\n//          .catch(error=>{\r\n//              console.log(\"Error\")\r\n//          })\r\n//   }, [])\r\n\r\n  useEffect(() => {\r\n    getUsers().then((users: any) => {\r\n    //   setData(JSON.stringify(users, undefined, 2));\r\n      setData(users);\r\n    });\r\n  }, []);\r\n\r\n  const handleRowUpdate = (newData, oldData, resolve) => {\r\n    //validation\r\n    let errorList: any = []\r\n    if(newData.first_name === \"\"){\r\n      errorList.push(\"Please enter first name\")\r\n    }\r\n    if(newData.last_name === \"\"){\r\n      errorList.push(\"Please enter last name\")\r\n    }\r\n    // if(newData.email === \"\" || validateEmail(newData.email) === false){\r\n    if(newData.email === \"\"){\r\n        errorList.push(\"Please enter a valid email\")\r\n    }\r\n\r\n    if(errorList.length < 1){\r\n      api.patch(\"/users/\"+newData.id, newData)\r\n      .then(res => {\r\n        const dataUpdate = [...data];\r\n        const index: string  = oldData.tableData.id;\r\n        dataUpdate[index] = newData;\r\n        setData([...dataUpdate]);\r\n        resolve()\r\n        setIserror(false)\r\n        setErrorMessages([])\r\n      })\r\n      .catch(error => {\r\n        // setErrorMessages([\"Update failed! Server error\"])\r\n        setIserror(true)\r\n        resolve()\r\n\r\n      })\r\n    }else{\r\n      setErrorMessages(errorList)\r\n      setIserror(true)\r\n      resolve()\r\n\r\n    }\r\n\r\n  }\r\n\r\n  const handleRowAdd = (newData, resolve) => {\r\n    //validation\r\n    let errorList: any = []\r\n    if(newData.id === undefined){\r\n      errorList.push(\"Please enter id\")\r\n    }\r\n    if(newData.name === undefined){\r\n      errorList.push(\"Please enter name\")\r\n    }\r\n    // if(newData.email === undefined || validateEmail(newData.email) === false){\r\n    if(newData.tel === undefined){\r\n      errorList.push(\"Please enter a valid tel\")\r\n    }\r\n\r\n    if(errorList.length < 1){ //no error\r\n      api.post(\"/users\", newData)\r\n      .then(res => {\r\n        let dataToAdd: any = [...data];\r\n        dataToAdd.push(newData);\r\n        setData(dataToAdd);\r\n        resolve()\r\n        setErrorMessages([])\r\n        setIserror(false)\r\n      })\r\n      .catch(error => {\r\n        // setErrorMessages([\"Cannot add data. Server error!\"])\r\n        setIserror(true)\r\n        resolve()\r\n      })\r\n    }else{\r\n      setErrorMessages(errorList)\r\n      setIserror(true)\r\n      resolve()\r\n    }\r\n\r\n\r\n  }\r\n\r\n  const handleRowDelete = (oldData, resolve) => {\r\n\r\n    api.delete(\"/users/\"+oldData.id)\r\n      .then(res => {\r\n        const dataDelete = [...data];\r\n        const index = oldData.tableData.id;\r\n        dataDelete.splice(index, 1);\r\n        setData([...dataDelete]);\r\n        resolve()\r\n      })\r\n      .catch(error => {\r\n        // setErrorMessages([\"Delete failed! Server error\"])\r\n        setIserror(true)\r\n        resolve()\r\n      })\r\n  }\r\n\r\n\r\n  return (\r\n    <GenericTemplate title=\"担当者一覧\">\r\n    <div className=\"App\">\r\n\r\n      <Grid container spacing={1}>\r\n          <Grid item xs={3}></Grid>\r\n          <Grid item xs={12}>\r\n          <div>\r\n            {iserror &&\r\n              <Alert severity=\"error\">\r\n                  {errorMessages.map((msg, i) => {\r\n                      return <div key={i}>{msg}</div>\r\n                  })}\r\n              </Alert>\r\n            }\r\n          </div>\r\n            <MaterialTable\r\n              localization={{\r\n                header: { actions: '' },\r\n              }}\r\n              title=\"\"\r\n              columns={columns}\r\n              data={data}\r\n              icons={tableIcons}\r\n              editable={{\r\n                onRowUpdate: (newData, oldData) =>\r\n                  new Promise((resolve) => {\r\n                      handleRowUpdate(newData, oldData, resolve);\r\n\r\n                  }),\r\n                onRowAdd: (newData) =>\r\n                  new Promise((resolve) => {\r\n                    handleRowAdd(newData, resolve)\r\n                  }),\r\n                onRowDelete: (oldData) =>\r\n                  new Promise((resolve) => {\r\n                    handleRowDelete(oldData, resolve)\r\n                  }),\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}></Grid>\r\n        </Grid>\r\n    </div>\r\n    </GenericTemplate>\r\n  );\r\n}\r\n\r\nexport default App;","/usr/src/app/react-sample/src/components/higher-order/ProtectedRoute.tsx",[],"/usr/src/app/react-sample/src/data/rest.ts",[],"/usr/src/app/react-sample/src/context/User/TaskActions.ts",[],"/usr/src/app/react-sample/src/context/User/TaskHooks.ts",[],"/usr/src/app/react-sample/src/components/pages/CountPage.tsx",[],"/usr/src/app/react-sample/src/components/organisms/FileList.tsx",["219"],"import { Button } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getFiles, useFiles } from \"../../context/File/FileStore\";\r\nimport { ActionTypes, FileChunkStatus, IFile, IFileChunkStatusCheck } from \"../../context/File/Interfaces\";\r\nimport { rest } from \"../../data/rest\";\r\nimport { calFileHash, getFileExtension, getFileSizeText, sliceFile } from \"../../services/file.service\";\r\nimport MaterialTable from \"material-table\";\r\nimport promisePool from \"../utils/promise-pool\";\r\n\r\n\r\n\r\nconst columns = [\r\n  { title: 'user', field: 'username' },\r\n  { title: 'File name', field: 'filename' },\r\n  { title: 'File path', field: 'filepath' },\r\n  { title: 'File size', field: 'size' },\r\n]\r\n\r\nconst FileList = () => {\r\n  const [{ files }, dispatch] = useFiles();\r\n  const [chunkCount, setChunkCount] = useState<number>(0);\r\n  const [chunkUploadedCount, setChunkUploadedCount] = useState<number>(0);\r\n  const [uploadMessage, setUploadMessage] = useState<string>(\"\");\r\n  useEffect(() => {\r\n    getFiles(dispatch);\r\n  }, [dispatch]);\r\n\r\n  const verifyFileHash = ({ total, hash, chunkSize }) => {\r\n    return rest.post<IFileChunkStatusCheck>(`filesystem/upload/chunk/verify`, {\r\n      total,\r\n      hash,\r\n      chunkSize,\r\n    });\r\n  }\r\n\r\n  const sendFileChunk = async (\r\n    file: File,\r\n    chunkVerifyResult: IFileChunkStatusCheck,\r\n    { chunkCount, chunkSize, hash, }\r\n  ) => {\r\n    const { status, meta } = chunkVerifyResult;\r\n    const chunkRequestArr: any[] = [];\r\n    for (let i = 0; i < chunkCount; i++) {\r\n      if (\r\n        status === FileChunkStatus.notfound ||\r\n        (\r\n          status === FileChunkStatus.partial &&\r\n          meta?.index && meta.index.length > 0 &&\r\n          !meta.index.includes(i)\r\n        )\r\n      ) {\r\n        const start = i * chunkSize;\r\n        const end = Math.min(file!.size, start + chunkSize);\r\n        const form = new FormData();\r\n        form.append(\"file_chunk\", sliceFile(file!, start, end));\r\n        form.append(\"chunkSize\", chunkSize.toString());\r\n        form.append(\"index\", i.toString());\r\n        form.append(\"hash\", hash);\r\n        // save request promise in array to run parallel\r\n        const chunkReqItem = () => {\r\n          return rest.post(\"filesystem/upload/chunk\", form, {\r\n            onUploadProgress: (e) => {\r\n              if (e.loaded === e.total) {\r\n                setChunkUploadedCount(chunkUploadedCount + 1);\r\n              }\r\n            },\r\n          });\r\n        }\r\n        chunkRequestArr.push(chunkReqItem);\r\n      }\r\n    }\r\n    // max limit 10 request at the same time\r\n    await promisePool(chunkRequestArr, 10);\r\n  }\r\n\r\n  const mergeChunk = async (payload) => {\r\n    const { data } = await rest.post<IFile>(\"filesystem/upload/chunk/merge\", payload)\r\n    setChunkUploadedCount(chunkCount);\r\n    dispatch({\r\n      type: ActionTypes.AddFile,\r\n      payload: { file: data }\r\n    })\r\n  }\r\n\r\n  const chunkUploadHandle = async (e) => {\r\n    const file: File = e.target.files[0];\r\n    if (!file) return;\r\n    setChunkUploadedCount(0);\r\n    setUploadMessage(\"Reading file chunk, please wait...\");\r\n    const { hash, chunkSize, chunkTotal } = await calFileHash(file)\r\n    console.log(hash, chunkSize, chunkTotal);\r\n    const { data } = await verifyFileHash({ hash, chunkSize, total: chunkTotal });\r\n    if (data.status === FileChunkStatus.success) {\r\n      setUploadMessage(\"File already uploaded to server ! No need to upload\");\r\n      return;\r\n    } else {\r\n      await sendFileChunk(\r\n        file,\r\n        data,\r\n        { chunkSize, hash, chunkCount: chunkTotal },\r\n      );\r\n      const mergeData = {\r\n        chunkSize,\r\n        filename: file!.name,\r\n        size: file!.size,\r\n        extension: getFileExtension(file!.name),\r\n        total: chunkTotal,\r\n        hash: hash,\r\n      };\r\n      await mergeChunk(mergeData);\r\n      setChunkCount(chunkTotal);\r\n    }\r\n  }\r\n\r\n  const normalUploadHandle = async (e) => {\r\n    const file: File = e.target.files[0];\r\n    if (!file) return;\r\n    const form = new FormData();\r\n    form.append(\"file\", file);\r\n    setUploadMessage(\"Uploading file, please wait\");\r\n    try {\r\n      const { data } = await rest.post<IFile>(\"filesystem/upload\", form, {\r\n        timeout: 300000 // 5 minutes\r\n      });\r\n      dispatch({\r\n        type: ActionTypes.AddFile,\r\n        payload: { file: data }\r\n      });\r\n      e.target = null;\r\n      setUploadMessage(\"file uploaded successfully\");\r\n    } catch (err) {\r\n      console.log(err);\r\n      setUploadMessage(\"file upload fail, please try again\");\r\n    }\r\n  }\r\n\r\n  const displayFile = () => {\r\n    return files.map(file => {\r\n      const { unit, size: fileSize } = getFileSizeText(parseInt(file.size));\r\n      const sizeToText = `${fileSize} ${unit}`;\r\n      return {\r\n        username: file.user?.name || 'guest user',\r\n        size: sizeToText,\r\n        filepath: file.filepath,\r\n        filename: file.filename\r\n      }\r\n    })\r\n  }\r\n  return <>\r\n    <Button\r\n      component=\"label\"\r\n    >\r\n      {uploadMessage}\r\n    </Button>\r\n    <input\r\n      type=\"file\"\r\n      className=\"inputFileBtnHide\"\r\n      onChange={normalUploadHandle}\r\n    />\r\n    <MaterialTable\r\n      title=\"\"\r\n      columns={columns}\r\n      data={displayFile()}\r\n    />\r\n    </>\r\n};\r\n\r\nexport default FileList;","/usr/src/app/react-sample/src/components/tasks/TaskContainer.tsx",[],"/usr/src/app/react-sample/src/context/File/FileStore.tsx",[],"/usr/src/app/react-sample/src/components/templates/GenericTemplate.tsx",[],"/usr/src/app/react-sample/src/context/Task/TaskContext.tsx",[],"/usr/src/app/react-sample/src/context/Count/CntStores.tsx",["220"],"import * as React from \"react\";\r\nimport { IState, IStoreProvider } from \"./Interfaces\";\r\nimport { reducer } from \"./CntReducer\";\r\n\r\nconst initialState: IState = {\r\n  todos: [],\r\n  visibilityFilter: \"SHOW_ALL\",\r\n  nextTodoId: 0\r\n};\r\n\r\nexport const Store = React.createContext<IState | any>(initialState);\r\n\r\nexport const StoreProvider: React.FC = ({ children }): JSX.Element => {\r\n  const [state, dispatch] = React.useReducer(reducer, initialState);\r\n  return (\r\n    <Store.Provider value={{ state, dispatch }}>{children}</Store.Provider>\r\n  );\r\n};","/usr/src/app/react-sample/src/context/User/Interfaces.ts",[],"/usr/src/app/react-sample/src/data/mock/index.ts",[],"/usr/src/app/react-sample/src/data/api/user/index.ts",[],"/usr/src/app/react-sample/src/context/File/Interfaces.ts",[],"/usr/src/app/react-sample/src/context/User/TaskContext.tsx",[],"/usr/src/app/react-sample/src/context/Task/TaskReducer.ts",[],"/usr/src/app/react-sample/src/context/Count/CntReducer.ts",[],"/usr/src/app/react-sample/src/services/file.service.ts",[],"/usr/src/app/react-sample/src/components/utils/promise-pool.ts",[],"/usr/src/app/react-sample/src/components/pages/TodoList.tsx",[],"/usr/src/app/react-sample/src/components/pages/Footer.tsx",[],"/usr/src/app/react-sample/src/components/pages/AddTodo.tsx",[],"/usr/src/app/react-sample/src/context/File/FileReducer.ts",[],"/usr/src/app/react-sample/src/context/Task/TaskHooks.ts",[],"/usr/src/app/react-sample/src/context/Task/TaskActions.ts",[],"/usr/src/app/react-sample/src/components/tasks/ListTask.tsx",[],"/usr/src/app/react-sample/src/components/tasks/LogoutButton.tsx",[],"/usr/src/app/react-sample/src/data/mock/$mock.ts",[],"/usr/src/app/react-sample/src/data/api/user/getUsers.ts",[],"/usr/src/app/react-sample/src/context/User/TaskReducer.ts",[],"/usr/src/app/react-sample/src/context/Task/Interfaces.ts",[],"/usr/src/app/react-sample/src/components/pages/Todo.tsx",[],"/usr/src/app/react-sample/src/components/pages/FilterLink.tsx",[],"/usr/src/app/react-sample/src/components/tasks/TaskElem.tsx",[],"/usr/src/app/react-sample/src/data/mock/company/listcompany.ts",[],"/usr/src/app/react-sample/src/data/mock/user/list.ts",[],"/usr/src/app/react-sample/src/components/tasks/CheckboxStatus.tsx",[],"/usr/src/app/react-sample/src/components/tasks/DeleteBtn.tsx",[],{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":28,"column":10,"nodeType":"227","messageId":"228","endLine":28,"endColumn":29},{"ruleId":"225","severity":1,"message":"229","line":71,"column":19,"nodeType":"227","messageId":"228","endLine":71,"endColumn":24},{"ruleId":"225","severity":1,"message":"230","line":71,"column":26,"nodeType":"227","messageId":"228","endLine":71,"endColumn":30},{"ruleId":"225","severity":1,"message":"231","line":72,"column":12,"nodeType":"227","messageId":"228","endLine":72,"endColumn":24},{"ruleId":"225","severity":1,"message":"232","line":73,"column":21,"nodeType":"227","messageId":"228","endLine":73,"endColumn":35},{"ruleId":"225","severity":1,"message":"233","line":73,"column":37,"nodeType":"227","messageId":"228","endLine":73,"endColumn":42},{"ruleId":"225","severity":1,"message":"234","line":73,"column":46,"nodeType":"227","messageId":"228","endLine":73,"endColumn":55},{"ruleId":"225","severity":1,"message":"235","line":85,"column":9,"nodeType":"227","messageId":"228","endLine":85,"endColumn":26},{"ruleId":"225","severity":1,"message":"236","line":2,"column":18,"nodeType":"227","messageId":"228","endLine":2,"endColumn":32},"no-native-reassign",["237"],"no-negated-in-lhs",["238"],"@typescript-eslint/no-unused-vars","'defaultQueryOptions' is defined but never used.","Identifier","unusedVar","'tasks' is assigned a value but never used.","'meta' is assigned a value but never used.","'createTaskCb' is assigned a value but never used.","'getTaskLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'getTaskCb' is assigned a value but never used.","'chunkUploadHandle' is assigned a value but never used.","'IStoreProvider' is defined but never used.","no-global-assign","no-unsafe-negation"]